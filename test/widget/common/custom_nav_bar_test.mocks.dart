// Mocks generated by Mockito 5.4.6 from annotations
// in gig_hub/test/widget/common/custom_nav_bar_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:ui' as _i5;

import 'package:gig_hub/src/Data/app_imports.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeDJ_0 extends _i1.SmartFake implements _i2.DJ {
  _FakeDJ_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBooker_1 extends _i1.SmartFake implements _i2.Booker {
  _FakeBooker_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAppUser_2 extends _i1.SmartFake implements _i2.AppUser {
  _FakeAppUser_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGroupChat_3 extends _i1.SmartFake implements _i2.GroupChat {
  _FakeGroupChat_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePublicGroupChat_4 extends _i1.SmartFake
    implements _i2.PublicGroupChat {
  _FakePublicGroupChat_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [DatabaseRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseRepository extends _i1.Mock
    implements _i2.DatabaseRepository {
  MockDatabaseRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i3.Future<void> createGuest(_i2.Guest? guest) =>
      (super.noSuchMethod(
            Invocation.method(#createGuest, [guest]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> createDJ(_i2.DJ? user) =>
      (super.noSuchMethod(
            Invocation.method(#createDJ, [user]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> createBooker(_i2.Booker? user) =>
      (super.noSuchMethod(
            Invocation.method(#createBooker, [user]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteGuest(_i2.Guest? user) =>
      (super.noSuchMethod(
            Invocation.method(#deleteGuest, [user]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteDJ(_i2.DJ? user) =>
      (super.noSuchMethod(
            Invocation.method(#deleteDJ, [user]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteBooker(_i2.Booker? user) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBooker, [user]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateGuest(_i2.Guest? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateGuest, [user]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateDJ(_i2.DJ? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateDJ, [user]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateBooker(_i2.Booker? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateBooker, [user]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i2.DJ> getProfileDJ() =>
      (super.noSuchMethod(
            Invocation.method(#getProfileDJ, []),
            returnValue: _i3.Future<_i2.DJ>.value(
              _FakeDJ_0(this, Invocation.method(#getProfileDJ, [])),
            ),
          )
          as _i3.Future<_i2.DJ>);

  @override
  _i3.Future<_i2.Booker> getProfileBooker() =>
      (super.noSuchMethod(
            Invocation.method(#getProfileBooker, []),
            returnValue: _i3.Future<_i2.Booker>.value(
              _FakeBooker_1(this, Invocation.method(#getProfileBooker, [])),
            ),
          )
          as _i3.Future<_i2.Booker>);

  @override
  _i3.Future<List<_i2.DJ>> getDJs() =>
      (super.noSuchMethod(
            Invocation.method(#getDJs, []),
            returnValue: _i3.Future<List<_i2.DJ>>.value(<_i2.DJ>[]),
          )
          as _i3.Future<List<_i2.DJ>>);

  @override
  _i3.Future<List<_i2.DJ>> searchDJs({
    String? city,
    List<String>? genres,
    List<int>? bpmRange,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#searchDJs, [], {
              #city: city,
              #genres: genres,
              #bpmRange: bpmRange,
            }),
            returnValue: _i3.Future<List<_i2.DJ>>.value(<_i2.DJ>[]),
          )
          as _i3.Future<List<_i2.DJ>>);

  @override
  _i3.Future<List<_i2.DJ>> getFavoriteDJs(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getFavoriteDJs, [userId]),
            returnValue: _i3.Future<List<_i2.DJ>>.value(<_i2.DJ>[]),
          )
          as _i3.Future<List<_i2.DJ>>);

  @override
  _i3.Future<void> sendMessage(_i2.ChatMessage? message) =>
      (super.noSuchMethod(
            Invocation.method(#sendMessage, [message]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Stream<List<_i2.ChatMessage>> getChatsStream(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getChatsStream, [userId]),
            returnValue: _i3.Stream<List<_i2.ChatMessage>>.empty(),
          )
          as _i3.Stream<List<_i2.ChatMessage>>);

  @override
  String getChatId(String? uid1, String? uid2) =>
      (super.noSuchMethod(
            Invocation.method(#getChatId, [uid1, uid2]),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.method(#getChatId, [uid1, uid2]),
            ),
          )
          as String);

  @override
  _i3.Stream<List<_i2.ChatMessage>> getMessagesStream(
    String? senderId,
    String? receiverId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMessagesStream, [senderId, receiverId]),
            returnValue: _i3.Stream<List<_i2.ChatMessage>>.empty(),
          )
          as _i3.Stream<List<_i2.ChatMessage>>);

  @override
  _i3.Future<void> deleteChat(String? userId, String? partnerId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteChat, [userId, partnerId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteMessage(
    String? chatId,
    String? messageId,
    String? currentUserId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#deleteMessage, [
              chatId,
              messageId,
              currentUserId,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> forceRefreshChatList(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#forceRefreshChatList, [userId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> blockUser(String? currentUid, String? targetUid) =>
      (super.noSuchMethod(
            Invocation.method(#blockUser, [currentUid, targetUid]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> unblockUser(String? currentUid, String? targetUid) =>
      (super.noSuchMethod(
            Invocation.method(#unblockUser, [currentUid, targetUid]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i2.AppUser>> getBlockedUsers(String? currentUid) =>
      (super.noSuchMethod(
            Invocation.method(#getBlockedUsers, [currentUid]),
            returnValue: _i3.Future<List<_i2.AppUser>>.value(<_i2.AppUser>[]),
          )
          as _i3.Future<List<_i2.AppUser>>);

  @override
  _i3.Future<_i2.AppUser> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i3.Future<_i2.AppUser>.value(
              _FakeAppUser_2(this, Invocation.method(#getCurrentUser, [])),
            ),
          )
          as _i3.Future<_i2.AppUser>);

  @override
  _i3.Future<_i2.AppUser> getUserById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getUserById, [id]),
            returnValue: _i3.Future<_i2.AppUser>.value(
              _FakeAppUser_2(this, Invocation.method(#getUserById, [id])),
            ),
          )
          as _i3.Future<_i2.AppUser>);

  @override
  _i3.Future<void> updateUser(_i2.AppUser? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateUser, [user]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> initFirebaseMessaging() =>
      (super.noSuchMethod(
            Invocation.method(#initFirebaseMessaging, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> createStatusMessage(_i2.StatusMessage? statusMessage) =>
      (super.noSuchMethod(
            Invocation.method(#createStatusMessage, [statusMessage]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i2.StatusMessage?> getActiveStatusMessage(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getActiveStatusMessage, [userId]),
            returnValue: _i3.Future<_i2.StatusMessage?>.value(),
          )
          as _i3.Future<_i2.StatusMessage?>);

  @override
  _i3.Future<void> deleteStatusMessage(String? statusMessageId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteStatusMessage, [statusMessageId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i2.GroupChat> createGroupChat(_i2.GroupChat? groupChat) =>
      (super.noSuchMethod(
            Invocation.method(#createGroupChat, [groupChat]),
            returnValue: _i3.Future<_i2.GroupChat>.value(
              _FakeGroupChat_3(
                this,
                Invocation.method(#createGroupChat, [groupChat]),
              ),
            ),
          )
          as _i3.Future<_i2.GroupChat>);

  @override
  _i3.Future<_i2.GroupChat?> getGroupChatByRaveId(String? raveId) =>
      (super.noSuchMethod(
            Invocation.method(#getGroupChatByRaveId, [raveId]),
            returnValue: _i3.Future<_i2.GroupChat?>.value(),
          )
          as _i3.Future<_i2.GroupChat?>);

  @override
  _i3.Future<_i2.GroupChat?> getGroupChatById(String? groupChatId) =>
      (super.noSuchMethod(
            Invocation.method(#getGroupChatById, [groupChatId]),
            returnValue: _i3.Future<_i2.GroupChat?>.value(),
          )
          as _i3.Future<_i2.GroupChat?>);

  @override
  _i3.Future<void> updateGroupChat(_i2.GroupChat? groupChat) =>
      (super.noSuchMethod(
            Invocation.method(#updateGroupChat, [groupChat]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i2.GroupChat>> getUserGroupChats(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUserGroupChats, [userId]),
            returnValue: _i3.Future<List<_i2.GroupChat>>.value(
              <_i2.GroupChat>[],
            ),
          )
          as _i3.Future<List<_i2.GroupChat>>);

  @override
  _i3.Future<void> sendGroupMessage(_i2.GroupMessage? message) =>
      (super.noSuchMethod(
            Invocation.method(#sendGroupMessage, [message]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Stream<List<_i2.GroupMessage>> getGroupMessagesStream(
    String? groupChatId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getGroupMessagesStream, [groupChatId]),
            returnValue: _i3.Stream<List<_i2.GroupMessage>>.empty(),
          )
          as _i3.Stream<List<_i2.GroupMessage>>);

  @override
  _i3.Future<void> markGroupMessageAsRead(
    String? groupChatId,
    String? messageId,
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#markGroupMessageAsRead, [
              groupChatId,
              messageId,
              userId,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteExpiredGroupChats() =>
      (super.noSuchMethod(
            Invocation.method(#deleteExpiredGroupChats, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateGroupChatLastMessage(
    String? groupChatId,
    _i2.GroupMessage? message,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateGroupChatLastMessage, [
              groupChatId,
              message,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateGroupChatImage(
    String? groupChatId,
    String? imageUrl,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateGroupChatImage, [groupChatId, imageUrl]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i2.PublicGroupChat> createPublicGroupChat(
    _i2.PublicGroupChat? publicGroupChat,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createPublicGroupChat, [publicGroupChat]),
            returnValue: _i3.Future<_i2.PublicGroupChat>.value(
              _FakePublicGroupChat_4(
                this,
                Invocation.method(#createPublicGroupChat, [publicGroupChat]),
              ),
            ),
          )
          as _i3.Future<_i2.PublicGroupChat>);

  @override
  _i3.Future<_i2.PublicGroupChat?> getPublicGroupChatByRaveId(String? raveId) =>
      (super.noSuchMethod(
            Invocation.method(#getPublicGroupChatByRaveId, [raveId]),
            returnValue: _i3.Future<_i2.PublicGroupChat?>.value(),
          )
          as _i3.Future<_i2.PublicGroupChat?>);

  @override
  _i3.Future<_i2.PublicGroupChat?> getPublicGroupChatById(
    String? publicGroupChatId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getPublicGroupChatById, [publicGroupChatId]),
            returnValue: _i3.Future<_i2.PublicGroupChat?>.value(),
          )
          as _i3.Future<_i2.PublicGroupChat?>);

  @override
  _i3.Future<void> updatePublicGroupChat(
    _i2.PublicGroupChat? publicGroupChat,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePublicGroupChat, [publicGroupChat]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i2.PublicGroupChat>> getUserPublicGroupChats(
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getUserPublicGroupChats, [userId]),
            returnValue: _i3.Future<List<_i2.PublicGroupChat>>.value(
              <_i2.PublicGroupChat>[],
            ),
          )
          as _i3.Future<List<_i2.PublicGroupChat>>);

  @override
  _i3.Future<void> sendPublicGroupMessage(_i2.PublicGroupMessage? message) =>
      (super.noSuchMethod(
            Invocation.method(#sendPublicGroupMessage, [message]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Stream<List<_i2.PublicGroupMessage>> getPublicGroupMessagesStream(
    String? publicGroupChatId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getPublicGroupMessagesStream, [
              publicGroupChatId,
            ]),
            returnValue: _i3.Stream<List<_i2.PublicGroupMessage>>.empty(),
          )
          as _i3.Stream<List<_i2.PublicGroupMessage>>);

  @override
  _i3.Future<void> deleteExpiredPublicGroupChats() =>
      (super.noSuchMethod(
            Invocation.method(#deleteExpiredPublicGroupChats, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updatePublicGroupChatLastMessage(
    String? publicGroupChatId,
    _i2.PublicGroupMessage? message,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePublicGroupChatLastMessage, [
              publicGroupChatId,
              message,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateRave(String? raveId, Map<String, dynamic>? updates) =>
      (super.noSuchMethod(
            Invocation.method(#updateRave, [raveId, updates]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteRave(String? raveId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteRave, [raveId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
